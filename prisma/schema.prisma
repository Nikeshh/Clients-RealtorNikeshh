// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  clients       Client[]
  properties    Property[]
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Client {
  id           String   @id @default(cuid())
  name         String
  email        String
  phone        String
  requirements Json     // Stores the requirements object
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  properties   Property[] // Properties shared with this client
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Property {
  id          String   @id @default(cuid())
  title       String
  price       Float
  location    String
  bedrooms    Int
  bathrooms   Int
  area        Float
  type        String   // 'rent' or 'sale'
  imageUrl    String?
  source      String   // 'treeb' or 'manual'
  sourceUrl   String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  clients     Client[] // Clients this property has been shared with
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
} 